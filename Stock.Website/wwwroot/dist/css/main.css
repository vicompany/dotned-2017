@import url("https://fonts.googleapis.com/css?family=Lato:400,700");
@keyframes flash {
  0% {
    opacity: 0; }
  50% {
    opacity: 1; }
  100% {
    opacity: 0; } }
/* ==========================================================================
   Breakpoint mixins
   ========================================================================== */
/**
 * Respond-to mixin
 * Put style declarations within a media query.
 * It will try to get the media query from the $breakpoints map
 *
 * @param  {key|value} $min-width  		Media media query name or value to start from
 * @param  {key|value} [$max-width]		Optional media query name or value to end (minus 1px of 0.01em/rem/etc)
 *
 * @see {@link http://tzi.fr/css/responsive/prevent-double-breakpoint}
 *
 */
/* Convert the breakpoint keyword to its corresponding unit (em, rem, etc)
   ========================================================================== */
/* Breakpoint sync
   ========================================================================== */
*, *:before, *:after {
  box-sizing: inherit; }
html {
  box-sizing: border-box; }
body {
  margin: 0;
  padding: 0;
  font-family: "Lato", sans-serif;
  font-size: 1rem;
  font-weight: 300;
  line-height: 1.75; }
h1,
h2,
h3,
h4 {
  margin-top: 0; }
h1 {
  margin-bottom: 1.5rem;
  font-size: 2rem; }
h2 {
  margin-bottom: 1rem;
  font-size: 1.5rem; }
img,
video {
  width: auto;
  max-width: 100%;
  height: auto;
  vertical-align: middle; }
a {
  color: #1e283c;
  text-decoration: underline; }
a:hover {
    text-decoration: none; }
.container {
  max-width: 70rem;
  margin-right: auto;
  margin-left: auto;
  padding-right: 1rem;
  padding-left: 1rem; }
.section {
  padding-bottom: 1rem;
  margin-bottom: 1rem;
  border-bottom: 1px solid #1e283c; }
.button {
  padding: 0.66667rem;
  border: 2px solid #1e283c;
  border-radius: 0.2rem;
  color: #1e283c;
  background-color: #fff;
  cursor: pointer;
  transition: background-color 0.1s ease-in, color 0.1s ease-in; }
.button:hover {
    background-color: #1e283c;
    color: #fff; }
.field {
  margin-bottom: 0.66667rem; }
.field__input {
  padding: 0.66667rem;
  border: 2px solid #1e283c;
  border-radius: 0.2rem; }
.box-container {
  border: 1px solid red; }
.grid {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem; }
.cell {
  -ms-flex: 1 0 auto;
      flex: 1 0 auto;
  margin-bottom: 1rem;
  padding-right: 0.5rem;
  padding-left: 0.5rem; }
.cell--1\/2 {
    -ms-flex-preferred-size: 50%;
        flex-basis: 50%;
    -ms-flex-positive: 0;
        flex-grow: 0; }
.cell--1\/3 {
    -ms-flex-preferred-size: 33.33333%;
        flex-basis: 33.33333%;
    -ms-flex-positive: 0;
        flex-grow: 0; }
@media (min-width: 30rem) {
    .cell--small-1\/2 {
      -ms-flex-preferred-size: 50%;
          flex-basis: 50%;
      -ms-flex-positive: 0;
          flex-grow: 0; }
    .cell--small-1\/3 {
      -ms-flex-preferred-size: 33.33333%;
          flex-basis: 33.33333%;
      -ms-flex-positive: 0;
          flex-grow: 0; } }
@media (min-width: 48rem) {
    .cell--medium-1\/2 {
      -ms-flex-preferred-size: 50%;
          flex-basis: 50%; }
    .cell--medium-1\/3 {
      -ms-flex-preferred-size: 33.33333%;
          flex-basis: 33.33333%; } }
@media (min-width: 70rem) {
    .cell--large-1\/2 {
      -ms-flex-preferred-size: 50%;
          flex-basis: 50%; }
    .cell--large-1\/3 {
      -ms-flex-preferred-size: 33.33333%;
          flex-basis: 33.33333%; } }
.cell.is-expanded {
    -ms-flex-preferred-size: 100%;
        flex-basis: 100%;
    margin-bottom: 1rem; }
.header {
  margin-bottom: 1rem;
  padding: 1rem;
  background: rgba(255, 255, 255, 0.7);
  border-bottom: 1px solid #ececec; }
.header__logo {
  width: auto;
  max-width: 11rem; }
.label {
  padding-right: 0.66667rem;
  display: inline-block;
  font-weight: bold; }
.notification {
  padding: 0.66667rem;
  background-color: #e6b464;
  font-weight: bold; }
.table {
  width: 100%;
  border-collapse: collapse; }
.table:not(last-of-type) {
    margin-bottom: 1rem; }
.table--zebra tr:nth-child(even) {
    background: #ececec; }
.table__head,
.table__cell {
  padding: 0.33333rem; }
.table__head {
  text-align: left;
  background-color: #b9b9b9; }
.table--horizontal .table__head {
    width: 30%;
    padding-left: 0.66667rem;
    background-color: transparent; }
.ticker-overview {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  box-sizing: border-box;
  margin-right: -0.5rem;
  margin-left: -0.5rem; }
.ticker-overview__ticker {
  -ms-flex: 0 0 25%;
      flex: 0 0 25%;
  margin-bottom: 0.5rem;
  padding: 0 0.5rem; }
.ticker-overview__ticker.is-expanded {
    -ms-flex-preferred-size: 100%;
        flex-basis: 100%;
    height: 90vh; }
.ticker {
  position: relative;
  height: 100%;
  padding: 0.66667rem;
  border: 2px solid #1e283c; }
.ticker__header {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-align: center;
      align-items: center;
  margin: -0.66667rem;
  margin-bottom: 0.66667rem;
  padding: 0.33333rem 1rem;
  border-bottom: 1px solid #1e283c;
  color: #1e283c; }
.ticker__title {
  margin-right: 0.66667rem;
  margin-bottom: 0; }
.ticker__actions {
  -ms-flex-negative: 0;
      flex-shrink: 0; }
.ticker__mid {
  position: relative;
  font-size: 1.2rem;
  font-weight: 700;
  text-align: center;
  border-bottom: 1px solid #b9b9b9; }
.ticker__mid-value {
  position: relative;
  display: inline-block; }
.ticker__mid-value:before {
    position: absolute;
    top: 50%;
    left: -1rem;
    display: inline-block;
    width: 0.5rem;
    height: 0.5rem;
    margin-top: -0.25rem;
    border-radius: 50%;
    background-color: transparent;
    content: '';
    transition: background-color 0.5s ease-in forwards; }
.ticker__mid-value.is-positive-tick:before {
    background-color: #57e42a; }
.ticker__mid-value.is-negative-tick:before {
    background-color: #ff2e2e; }
.ticker__quote {
  height: 100%;
  text-align: center; }
.ticker__quote-title {
  margin-top: 0.66667rem; }
.ticker__quote-value {
  font-size: 1.2rem;
  font-weight: 700; }
.is-hidden {
  display: none; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

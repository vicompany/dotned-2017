@using System.IO
@using Microsoft.AspNetCore.Mvc.Razor
@using Microsoft.AspNetCore.Mvc.ViewFeatures
@using Stock.Website.Models
@model FundReportModel
@{
    ViewData["Title"] = "VueJS & Orleans";
}
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <div>
        @ViewBag.Message
    </div>
}

<main class="main">
    <section class="section">
        <h1>Info</h1>
        <p>
            This shows Vue.js working with a Microsoft Orleans cluster. Please use <a href="/cached/demo">cached</a> demo for more fluent experience
        </p>

        <h3>Funds</h3>

        <div class="js-instance">
            <ticker-overview inline-template>
                <div>
                    <div class="field">
                        <label for="symbol" class="label">Add a fund: </label>

                        <select name="symbol" id="symbol" class="field__input"
                            v-model="selectedSymbol"
                            v-on:change="onTickerSelected">
                            <option
                                v-for="symbol in symbols"
                                v-bind:disabled="tickerExists(symbol)"
                                v-text="symbol">
                            </option>
                        </select>
                    </div>

                    <div class="notification" v-if="tickers.length === 0">No tickers added yet</div>

                    <div class="grid">
                        <div class="cell cell--small-1/2  cell--medium-1/4"
                            v-for="(ticker, index) in tickers"
                        >
                            <ticker
                                key="index"
                                v-on:remove="remove"
                                v-bind:index="index"

                                v-bind:quote="quotes[ticker.symbol]"
                                v-bind:symbol="ticker.symbol"
                                v-bind:quotes="quotes">
                            </ticker>
                        </div>
                    </div>
                </div>

            </ticker-overview>
        </div>
    </section>

    <section class="section">
        <h2>Fund history</h2>

        <p>
            Please init the funds by clicking <a asp-action="Init">Here</a>
        </p>

        <table class="table table--zebra">
            <thead class="table__head">
                <tr class="table__row">
                    <th class="table__cell">Fund</th>
                    <th class="table__cell">Amount of bids</th>
                    <th class="table__cell">Average ask</th>
                    <th class="table__cell">Average bid</th>
                </tr>
            </thead>
            <tbody>
            @if (Model.Report != null)
            {
                foreach (var fund in Model.Report)
                {
                    <tr class="table__row">
                        <td class="table__cell">@fund.Name</td>
                        <td class="table__cell">@fund.AmountOfPrices</td>
                        <td class="table__cell">@fund.AverageBid.ToString("0.00000")</td>
                        <td class="table__cell">@fund.AverageAsk.ToString("0.00000")</td>
                    </tr>
                }
            }
            </tbody>
        </table>

    </section>
</main>

<script type="x-template" id="template-ticker">
	<div class="ticker">
		<div class="ticker__header">
            <h2 class="ticker__title" v-text="symbol"></h2>
            <div class="ticker__actions">
                <button class="button" v-on:click="remove">remove</button>
            </div>
        </div>

        <div class="grid">
            <div class="cell">
                <div class="ticker__quote">
                    <div class="ticker__mid"">
                        <div class="ticker__mid-value" v-bind:class="{ 'is-positive-tick': isPositiveTick, 'is-negative-tick': isNegativeTick }">
                            {{ mid }}
                        </div>
                    </div>

                    <div class="grid">
                        <div class="cell">
                            <div class="ticker__quote-title">Bid</div>
                            <div class="ticker__quote-value" v-text="quote.bid"></div>
                        </div>

                        <div class="cell">
                            <div class="ticker__quote-title">Ask</div>
                            <div class="ticker__quote-value" v-text="quote.ask"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
	</div>
</script>
